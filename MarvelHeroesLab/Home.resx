<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pboMarvelLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>